/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JFileChooser;
import util.SQL;

/**
 *
 * @author Aarib
 */
public class AddRaid extends javax.swing.JDialog {

    /**
     * Creates new form AddRaid
     */
    public AddRaid(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        btnAddRaid = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnLoadRaid = new javax.swing.JButton();
        btnLoadGuild = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNames = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        listEvents = new javax.swing.JList();

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnAddRaid.setText("Add Raid");
        btnAddRaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRaidActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnLoadRaid.setText("Load Raid Dump");
        btnLoadRaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadRaidActionPerformed(evt);
            }
        });

        btnLoadGuild.setText("Load Guild Dump");
        btnLoadGuild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadGuildActionPerformed(evt);
            }
        });

        txtNames.setColumns(20);
        txtNames.setRows(5);
        jScrollPane3.setViewportView(txtNames);

        listEvents.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "On Time", "Hour 1", "Hour 2", "Hour 3", "Hour 4", "Raid End", "Progression On Time", "Progression Hour 1", "Progression Hour 2", "Progression Hour 3", "Progression Hour 4", "Progression Raid End" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listEvents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listEvents);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLoadRaid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLoadGuild, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddRaid, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLoadRaid)
                        .addGap(18, 18, 18)
                        .addComponent(btnLoadGuild))
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddRaid, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRaidActionPerformed
        int event = SQL.EVENT_HOUR_1;
        
        String selectedEvent = (String)listEvents.getSelectedValue();
        
        if (selectedEvent.equalsIgnoreCase("On Time")) event = SQL.EVENT_ON_TIME;
        if (selectedEvent.equalsIgnoreCase("Hour 1")) event = SQL.EVENT_HOUR_1;
        if (selectedEvent.equalsIgnoreCase("Hour 2")) event = SQL.EVENT_HOUR_2;
        if (selectedEvent.equalsIgnoreCase("Hour 3")) event = SQL.EVENT_HOUR_3;
        if (selectedEvent.equalsIgnoreCase("Hour 4")) event = SQL.EVENT_HOUR_4;
        if (selectedEvent.equalsIgnoreCase("Raid End")) event = SQL.EVENT_RAID_ENDED;
        
        if (selectedEvent.equalsIgnoreCase("Progression On Time")) event = SQL.PROG_EVENT_ON_TIME;
        if (selectedEvent.equalsIgnoreCase("Progression Hour 1")) event = SQL.PROG_EVENT_HOUR_1;
        if (selectedEvent.equalsIgnoreCase("Progression Hour 2")) event = SQL.PROG_EVENT_HOUR_2;
        if (selectedEvent.equalsIgnoreCase("Progression Hour 3")) event = SQL.PROG_EVENT_HOUR_3;
        if (selectedEvent.equalsIgnoreCase("Progression Hour 4")) event = SQL.PROG_EVENT_HOUR_4;
        if (selectedEvent.equalsIgnoreCase("Progression Raid End")) event = SQL.PROG_EVENT_RAID_ENDED;
        
        ArrayList<String> names = new ArrayList<>();
        names.addAll(Arrays.asList(txtNames.getText().split("\n")));
        System.out.println(names.size());
        ArrayList<String> raidNames = new ArrayList<>();
        for (int i=0; i < names.size(); i++) {
                        String alias = SQL.getAlias(names.get(i));
                        if (!raidNames.contains(alias)){
                            raidNames.add(alias);
                        }
        }
        new SQL().addRaid(event, raidNames);
        
        setVisible(false);
        
    }//GEN-LAST:event_btnAddRaidActionPerformed

    private void btnLoadRaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadRaidActionPerformed
        JFileChooser chooser = new JFileChooser();
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line;

                while ((line = reader.readLine()) != null) {
                    String playerName = line.split("\t")[1]; // In raids the name is the 2nd item listed

                    txtNames.setText(txtNames.getText() + playerName + "\n");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnLoadRaidActionPerformed

    private void btnLoadGuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadGuildActionPerformed
        JFileChooser chooser = new JFileChooser();
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line;

                while ((line = reader.readLine()) != null) {
                    String playerName = line.split("\t")[0]; // In guilds the name is the 1st item listed

                    txtNames.setText(txtNames.getText() + playerName + "\n");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnLoadGuildActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        txtNames.setText("");
        
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRaid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRaid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRaid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRaid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddRaid dialog = new AddRaid(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRaid;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLoadGuild;
    private javax.swing.JButton btnLoadRaid;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listEvents;
    private javax.swing.JTextArea txtNames;
    // End of variables declaration//GEN-END:variables
}
